% getTrialsByTime returns the index to trials found between timeWindow(1)
% and timeWindow(2). Time t=0 is the time at which the ultrasound turns on
% as defined by tData.usTrial
% 
% @INPUTS
%   tData: Struct generated by processTaskDataDurable
%   timeWindow: 2x1 vector: [startTime, endTime]. Times should be in
%     seconds
% 
% @OUTPUTS
%   idx: The trial numbers that fall in the specified time window.
% 
% Taylor Webb
% University of Utah
% 5th October 2022

function idx = getTrialsByTime(tData,timeWindow)

usTrial = tData.sonicatedTrials;
if length(usTrial)>1
    error('More than one sonication in this session! I don''t know which one to align to.')
end
tm = [tData.timing.startTime];
tm = tm-tm(usTrial);
% tm = tm-tm(1);

% Make sure the time vector is increasing
if sum(diff(tm)<0)
    error('Time vector must be monotonically increasing')
end

% Check if the time window runs off the end of the current dataset. If it
% does, return an empty matrix, otherwise, return the relevant indices.
if timeWindow(1)<tm(1) || timeWindow(2)>tm(end)
    idx = [];
else
    idx = find(tm>=timeWindow(1)&tm<timeWindow(2));
    correctDelays = logical(tData.correctDelay);
    idx = idx(correctDelays(idx));
end